// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package db

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const getAllProductsThatNeedUpdate = `-- name: GetAllProductsThatNeedUpdate :many
SELECT DISTINCT partner_sku FROM partner_stockrecord WHERE partner_id = $1 AND date_updated <= $2
`

type GetAllProductsThatNeedUpdateParams struct {
	PartnerID   int64
	DateUpdated pgtype.Timestamptz
}

func (q *Queries) GetAllProductsThatNeedUpdate(ctx context.Context, arg GetAllProductsThatNeedUpdateParams) ([]string, error) {
	rows, err := q.db.Query(ctx, getAllProductsThatNeedUpdate, arg.PartnerID, arg.DateUpdated)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var partner_sku string
		if err := rows.Scan(&partner_sku); err != nil {
			return nil, err
		}
		items = append(items, partner_sku)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
